#!/bin/bash

# {{ ansible_managed }}
# Red Hat Demo - System Monitoring Script

APP_NAME="{{ app_name }}"
LOG_DIR="/var/log/{{ app_name }}"
TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')

# Create log directory if it doesn't exist
mkdir -p "$LOG_DIR"

# System metrics collection
{
    echo "[$TIMESTAMP] System Monitoring Report"
    echo "=================================="
    
    # CPU Usage
    echo "CPU Usage:"
    top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}' | sed 's/%us,/% /'
    
    # Memory Usage
    echo "Memory Usage:"
    free -h | grep "Mem:" | awk '{print "Used: " $3 " / " $2 " (" $3/$2*100 "%)"}' 
    
    # Disk Usage
    echo "Disk Usage:"
    df -h | grep -E '^/dev/' | awk '{print $1 ": " $3 "/" $2 " (" $5 ")"}'
    
    # Load Average
    echo "Load Average:"
    uptime | awk -F'load average:' '{print $2}'
    
    # Network Connections
    echo "Network Connections:"
    netstat -tn | grep ESTABLISHED | wc -l | awk '{print "Active connections: " $1}'
    
    # Process Count
    echo "Process Count:"
    ps aux | wc -l | awk '{print "Total processes: " $1}'
    
    # Top CPU processes
    echo "Top CPU Processes:"
    ps aux --sort=-%cpu | head -6 | tail -5 | awk '{print $2 " " $3 "% " $11}'
    
    # Top Memory processes  
    echo "Top Memory Processes:"
    ps aux --sort=-%mem | head -6 | tail -5 | awk '{print $2 " " $4 "% " $11}'
    
    echo "=================================="
    echo ""
    
} >> "$LOG_DIR/system_monitor.log"

# Rotate log file if it gets too large (>50MB)
if [ -f "$LOG_DIR/system_monitor.log" ] && [ $(stat -c%s "$LOG_DIR/system_monitor.log" 2>/dev/null || echo 0) -gt 52428800 ]; then
    tail -n 10000 "$LOG_DIR/system_monitor.log" > "$LOG_DIR/system_monitor.log.tmp"
    mv "$LOG_DIR/system_monitor.log.tmp" "$LOG_DIR/system_monitor.log"
fi

# Check for critical conditions and alert
CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}' | sed 's/%us,//')
MEMORY_USAGE=$(free | grep Mem | awk '{print ($3/$2) * 100.0}')
DISK_USAGE=$(df -h / | awk 'NR==2 {print $5}' | sed 's/%//')

# Alert if thresholds exceeded
if (( $(echo "$CPU_USAGE > 90" | bc -l) )); then
    echo "[$TIMESTAMP] ALERT: High CPU usage: ${CPU_USAGE}%" >> "$LOG_DIR/alerts.log"
fi

if (( $(echo "$MEMORY_USAGE > 90" | bc -l) )); then
    echo "[$TIMESTAMP] ALERT: High memory usage: ${MEMORY_USAGE}%" >> "$LOG_DIR/alerts.log"
fi

if [ "$DISK_USAGE" -gt 90 ]; then
    echo "[$TIMESTAMP] ALERT: High disk usage: ${DISK_USAGE}%" >> "$LOG_DIR/alerts.log"
fi 