---
- name: Install MariaDB server and client
  dnf:
    name:
      - mariadb-server
      - mariadb
      - python3-mysql
    state: present
    update_cache: yes

- name: Stop MariaDB service if running
  systemd:
    name: mariadb
    state: stopped
  ignore_errors: yes

- name: Remove existing MariaDB data to start fresh
  file:
    path: /var/lib/mysql
    state: absent
  when: reset_mariadb | default(false)

- name: Create MariaDB log directory
  file:
    path: /var/log/mariadb
    owner: mysql
    group: mysql
    mode: '0755'
    state: directory

- name: Configure MariaDB with minimal settings
  template:
    src: my.cnf.j2
    dest: /etc/my.cnf.d/rhel-demo.cnf
    owner: root
    group: root
    mode: '0644'
  notify: restart mariadb

- name: Start and enable MariaDB service
  systemd:
    name: mariadb
    enabled: yes
    state: started

- name: Wait for MariaDB to be ready
  wait_for:
    port: 3306
    delay: 10
    timeout: 60

- name: Secure MariaDB installation
  mysql_user:
    login_user: root
    login_password: ""
    name: root
    host: "{{ item }}"
    password: "{{ mysql_root_password | default('RedHatDemo123!') }}"
    priv: "*.*:ALL,GRANT"
    state: present
  loop:
    - "localhost"
    - "127.0.0.1"
    - "::1"
  when: mysql_root_password is defined or mysql_root_password is not defined

- name: Create application database
  mysql_db:
    login_user: root
    login_password: "{{ mysql_root_password | default('RedHatDemo123!') }}"
    name: "{{ app_name }}"
    state: present

- name: Create application user
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password | default('RedHatDemo123!') }}"
    name: "{{ app_name }}"
    password: "{{ mysql_app_password | default('AppDemo123!') }}"
    priv: "{{ app_name }}.*:ALL"
    host: "{{ item }}"
    state: present
  loop:
    - "localhost"
    - "127.0.0.1"
    - "%"

- name: Create demo tables
  mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password | default('RedHatDemo123!') }}"
    database: "{{ app_name }}"
    query: "{{ item }}"
  loop:
    - "CREATE TABLE IF NOT EXISTS users (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);"
    - "CREATE TABLE IF NOT EXISTS posts (id INT AUTO_INCREMENT PRIMARY KEY, user_id INT, title VARCHAR(200) NOT NULL, content TEXT, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES users(id));"
    - "CREATE TABLE IF NOT EXISTS system_info (id INT AUTO_INCREMENT PRIMARY KEY, hostname VARCHAR(100), uptime VARCHAR(50), load_average VARCHAR(50), memory_usage VARCHAR(50), timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP);"

- name: Insert demo data
  mysql_query:
    login_user: root
    login_password: "{{ mysql_root_password | default('RedHatDemo123!') }}"
    database: "{{ app_name }}"
    query: "{{ item }}"
  loop:
    - "INSERT IGNORE INTO users (username, email) VALUES ('admin', 'admin@rhel-demo.local');"
    - "INSERT IGNORE INTO users (username, email) VALUES ('demo', 'demo@rhel-demo.local');"
    - "INSERT IGNORE INTO posts (user_id, title, content) VALUES (1, 'Welcome to Red Hat Demo', 'This is a demo post showcasing Red Hat tools and technologies.');"
    - "INSERT IGNORE INTO posts (user_id, title, content) VALUES (2, 'Ansible Automation', 'Learn how Ansible can automate your infrastructure deployment.');"

- name: Configure MariaDB backup
  template:
    src: backup.sh.j2
    dest: /opt/{{ app_name }}/scripts/backup_mysql.sh
    owner: root
    group: root
    mode: '0755'

- name: Create backup cron job
  cron:
    name: "MariaDB Backup"
    hour: "2"
    minute: "0"
    job: "/opt/{{ app_name }}/scripts/backup_mysql.sh"
    state: present

- name: Configure MariaDB monitoring
  template:
    src: monitoring.sql.j2
    dest: /opt/{{ app_name }}/scripts/monitoring.sql
    owner: root
    group: root
    mode: '0644'

- name: Create monitoring user
  mysql_user:
    login_user: root
    login_password: "{{ mysql_root_password | default('RedHatDemo123!') }}"
    name: "monitor"
    password: "{{ mysql_monitor_password | default('Monitor123!') }}"
    priv: "PROCESS,REPLICATION CLIENT,SELECT"
    host: "localhost"
    state: present 